services:
  db:
    container_name: sekonik_db
    image: postgres:17.5-alpine
    restart: always
    ports:
      - 5432:5432
    volumes:
      - sekonik_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=usr
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=sekonik
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U usr -d sekonik"]
      interval: 5s
      timeout: 2s
      retries: 20

  api:
    container_name: sekonik-api
    build:
      context: .
      dockerfile: Dockerfile
    stdin_open: true
    tty: true
    working_dir: /www/apps/api
    volumes:
      - ./apps/api:/www/apps/api
    ports:
      - 127.0.0.1:8080:8080
    environment:
      - APP_HOST=0.0.0.0
      - APP_PORT=8080
      - BETTER_AUTH_SECRET=s3Cr3T
      - BETTER_AUTH_URL=http://localhost:8080/api/auth
      - DATABASE_URL=postgresql://usr:secret@db:5432/sekonik
    depends_on:
      db:
        condition: service_healthy

  web:
    container_name: sekonik-web
    build:
      context: .
      dockerfile: Dockerfile
    working_dir: /www/apps/web
    volumes:
      - ./apps/web:/www/apps/web
    ports:
      - 127.0.0.1:5173:5173
    environment:
      - VITE_API_URL=http://api:8080/api
    depends_on:
      - api

volumes:
  sekonik_data:
